
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: vdiclusters.app.kvdi.io
spec:
  group: app.kvdi.io
  names:
    kind: VDICluster
    listKind: VDIClusterList
    plural: vdiclusters
    singular: vdicluster
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: VDICluster is the Schema for the vdiclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VDIClusterSpec defines the desired state of VDICluster
            properties:
              app:
                description: App configurations.
                properties:
                  auditLog:
                    description: Whether to log auditing events to stdout
                    type: boolean
                  corsEnabled:
                    description: Whether to add CORS headers to API requests
                    type: boolean
                  image:
                    description: The image to use for the app instances. Defaults
                      to the public image matching the version of the currently running
                      manager.
                    type: string
                  replicas:
                    description: The number of app replicas to run
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements to place on the app pods
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceAnnotations:
                    additionalProperties:
                      type: string
                    description: Extra annotations to apply to the app service.
                    type: object
                  serviceType:
                    description: The type of service to create in front of the app
                      instance. Defaults to `LoadBalancer`.
                    type: string
                  tls:
                    description: TLS configurations for the app instance
                    properties:
                      serverSecret:
                        description: A pre-existing TLS secret to use for the HTTPS
                          listener. If not defined, a certificate is generated.
                        type: string
                    type: object
                type: object
              appNamespace:
                description: The namespace to provision application resurces in. Defaults
                  to the `default` namespace
                type: string
              auth:
                description: Authentication configurations
                properties:
                  adminSecret:
                    description: A secret where a generated admin password will be
                      stored
                    type: string
                  allowAnonymous:
                    description: Allow anonymous users to create desktop instances
                    type: boolean
                  defaultRoleRules:
                    description: The rules to apply to the default role created for
                      this cluster. These are the rules applied to anonymous users
                      (if allowed) and non-grouped OIDC users. They can also be used
                      for convenience when getting started. The defaults only allow
                      for launching templates in the `appNamespace`.
                    items:
                      description: Rule represents a set of permissions applied to
                        a VDIRole. It mostly resembles an rbacv1.PolicyRule, with
                        resources being a regex and the addition of a namespace selector.
                      properties:
                        namespaces:
                          description: Namespaces this rule applies to. Only evaluated
                            for template launching permissions. Including "*" as an
                            option matches all namespaces.
                          items:
                            type: string
                          type: array
                        resourcePatterns:
                          description: "Resource regexes that match this rule. This
                            can be template patterns, role names or user names. There
                            is no All representation because * will have that effect
                            on its own when the regex is evaluated. When referring
                            to \"serviceaccounts\", only the \"use\" verb is evaluated
                            in the context of assuming those accounts in desktop sessions.
                            \n **NOTE**: The `kvdi-manager` is responsible for launching
                            pods with a service account requested for a given Desktop.
                            If the service account itself contains more permissions
                            than the manager itself, the Kubernetes API will deny
                            the request. The way to remedy this would be to either
                            mirror permissions to that ClusterRole, or make the `kvdi-manager`
                            itself a cluster admin, both of which come with inherent
                            risks. In the end, you can decide the best approach for
                            your use case with regards to exposing access to the Kubernetes
                            APIs via kvdi sessions."
                          items:
                            type: string
                          type: array
                        resources:
                          description: 'Resources this rule applies to. ResourceAll
                            matches all resources. Recognized options are: `["users",
                            "roles", "templates", "serviceaccounts", "*"]`'
                          items:
                            description: Resource represents the target of an API
                              action
                            enum:
                            - users
                            - roles
                            - templates
                            - serviceaccounts
                            - '*'
                            type: string
                          type: array
                        verbs:
                          description: 'The actions this rule applies for. VerbAll
                            matches all actions. Recognized options are: `["create",
                            "read", "update", "delete", "use", "launch", "*"]`'
                          items:
                            description: Verb represents an API action
                            enum:
                            - create
                            - read
                            - update
                            - delete
                            - use
                            - launch
                            - '*'
                            type: string
                          type: array
                      type: object
                    type: array
                  ldapAuth:
                    description: Use LDAP for authentication.
                    properties:
                      adminGroups:
                        description: Group DNs that are allowed administrator access
                          to the cluster. Kubernetes admins will still have the ability
                          to change configurations via the CRDs.
                        items:
                          type: string
                        type: array
                      bindCredentialsSecret:
                        description: If you'd rather create a separate k8s secret
                          (instead of the configured backend) for the LDAP credentials,
                          set its name here. The keys in the secret need to be defined
                          in the other fields still. Default is to use the secret
                          backend.
                        type: string
                      bindPasswordSecretKey:
                        description: Similar to the `bindUserDNSecretKey`, but for
                          the location of the password secret. Defaults to `ldap-password`.
                        type: string
                      bindUserDNSecretKey:
                        description: If you want to use the built-in secrets backend
                          (vault or k8s currently), set this to either the name of
                          the secret in the vault path (the key must be "data" for
                          now), or the key of the secret used in `secrets.k8sSecret.secretName`.
                          In default configurations this is `kvdi-app-secrets`. Defaults
                          to `ldap-userdn`.
                        type: string
                      doStatusCheck:
                        description: When set to true, the authentication provider
                          will query the user's attributes for the `userStatusAttribute`
                          and make sure it matches the value in `userStatusEnabledValue`
                          before attemtping to bind.
                        type: boolean
                      tlsCACert:
                        description: The base64 encoded CA certificate to use when
                          verifying the TLS certificate of the LDAP server.
                        type: string
                      tlsInsecureSkipVerify:
                        description: Set to true to skip TLS verification of an `ldaps`
                          connection.
                        type: boolean
                      url:
                        description: The URL to the LDAP server.
                        type: string
                      userGroupsAttribute:
                        description: The user attribute use to lookup group membership
                          in LDAP. Defaults to `memberOf`.
                        type: string
                      userIDAttribute:
                        description: The user ID attribute to use when looking up
                          a provided username. Defaults to `uid`. This value may be
                          different depending on the LDAP provider. For example, in
                          an Active Directory environment you may want to set this
                          value to `sAMAccountName`.
                        type: string
                      userSearchBase:
                        description: The base scope to search for users in. Default
                          is to search the entire directory.
                        type: string
                      userStatusAttribute:
                        description: The user attribute to use when querying if an
                          account is active. Defaults to `accountStatus`. Only takes
                          effect if `doStatusCheck` is `true`. A user is considered
                          disabled when the attribute is both present and matches
                          the value in `userStatusDisabledValue`.
                        type: string
                      userStatusDisabledValue:
                        description: The value for the `userStatusAttribute` that
                          signifies that the user is disabled. Defaults to `inactive`.
                        type: string
                    type: object
                  localAuth:
                    description: Use local auth (secret-backed) authentication
                    type: object
                  oidcAuth:
                    description: Use OIDC for authentication
                    properties:
                      adminGroups:
                        description: Groups that are allowed administrator access
                          to the cluster. Kubernetes admins will still have the ability
                          to change rbac configurations via the CRDs.
                        items:
                          type: string
                        type: array
                      allowNonGroupedReadOnly:
                        description: Set to true if the OIDC provider does not support
                          the "groups" claim (or any valid alternative) and/or you
                          would like to allow any authenticated user read-only access.
                        type: boolean
                      clientCredentialsSecret:
                        description: When creating your own kubernets secret with
                          the `clientIDKey` and `clientSecretKey`, set this to the
                          name of the created secret. It must be in the same namespace
                          as the manager and app instances. Defaults to `oidc-clientsecret`.
                        type: string
                      clientIDKey:
                        description: When using the built-in secrets backend, the
                          key to where the client-id is stored. Set this to either
                          the name of the secret in the vault path (the key must be
                          "data" for now), or the key of the secret used in `secrets.k8sSecret.secretName`.
                          When configuring `clientCredentialsSecret`, set this to
                          the key in that secret. Defaults to `oidc-clientid`.
                        type: string
                      clientSecretKey:
                        description: Similar to `clientIDKey`, but for the location
                          of the client secret. Defaults to `oidc-clientsecret`.
                        type: string
                      groupScope:
                        description: If your OIDC provider does not return a `groups`
                          object, set this to the user attribute to use for binding
                          authenticated users to VDIRoles. Defaults to `groups`.
                        type: string
                      issuerURL:
                        description: The OIDC issuer URL used for discovery
                        type: string
                      preserveTokens:
                        description: "The access tokens returned by the OIDC provider
                          are usually discarded after identify information is retrieved
                          from them. If you set this to true, these fields will be
                          available for mapping in desktops at the following paths:
                          \n   - `{{ .Session.Data.access_token }}`   - `{{ .Session.Data.token_type
                          }}`   - `{{ .Session.Data.refresh_token }}`   - `{{ .Session.Data.expiry
                          }}` \n **NOTE:** This should be considered an insecure option
                          and only turned on taking into account the inherent risks.
                          If the access token used for authorizing actions against
                          the kvdi API gets compromised, it would be relatively easy
                          for the attacker to extract this information from the token
                          and use it for authenticating against third-party resources.
                          Additionally, when mapping these values to desktops, they
                          will be stored temporarily in Kubernetes Secrets. The security
                          of those secrets depends highly on your Kubernetes RBAC
                          setup and who has access to secrets in the namespace where
                          the Desktop is. So in short, it would be wise to only use
                          this setting in trusted environments where access to the
                          necessary kubernetes APIs is only available to a select
                          group of administrators, and the risk of the user using
                          a compromised browser is minimal."
                        type: boolean
                      redirectURL:
                        description: The redirect URL path configured in the OIDC
                          provider. This should be the full path where kvdi is hosted
                          followed by `/api/login`. For example, if `kvdi` is hosted
                          at https://kvdi.local, then this value should be set `https://kvdi.local/api/login`.
                        type: string
                      scopes:
                        description: The scopes to request with the authentication
                          request. Defaults to `["openid", "email", "profile", "groups"]`.
                        items:
                          type: string
                        type: array
                      tlsCACert:
                        description: The base64 encoded CA certificate to use when
                          verifying the TLS certificate of the OIDC provider.
                        type: string
                      tlsInsecureSkipVerify:
                        description: Set to true to skip TLS verification of an OIDC
                          provider.
                        type: boolean
                    type: object
                  tokenDuration:
                    description: How long issued access tokens should be valid for.
                      When using OIDC auth you may want to set this to a higher value
                      (e.g. 8-10h) since the refresh token flow will not be able to
                      lookup a user's grants from the provider. Defaults to `15m`.
                    type: string
                type: object
              desktops:
                description: Global desktop configurations
                properties:
                  maxSessionLength:
                    description: When configured, desktop sessions will be forcefully
                      terminated when the time limit is reached.
                    type: string
                  sessionsPerUser:
                    description: The maximum number of sessions a user can run at
                      a time. A zero value (or undefined) means no limit. When using
                      a `userdataSpec`, you might want to set this value to 1 if you
                      aren't using ReadWriteMany volumes. The storage controller would
                      inevitably enforce this behavior anyway, but you would save
                      the `kvdi-manager` some extra work.
                    type: integer
                type: object
              imagePullSecrets:
                description: Pull secrets to use when pulling container images
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              metrics:
                description: Metrics configurations.
                properties:
                  grafana:
                    description: Grafana sidecar configurations.
                    properties:
                      enabled:
                        description: Set to true to run a grafana sidecar with the
                          app pods. This can be used to visualize data in the prometheus
                          deployment.
                        type: boolean
                    type: object
                  prometheus:
                    description: Prometheus deployment configurations.g.
                    properties:
                      create:
                        description: Set to true to create a prometheus instance.
                        type: boolean
                      resources:
                        description: Resource requirements to place on the Prometheus
                          deployment
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  serviceMonitor:
                    description: Configurations for creating a ServiceMonitor CR for
                      a pre-existing prometheus-operator installation.
                    properties:
                      create:
                        description: Set to true to create a ServiceMonitor object
                          for the kvdi metrics.
                        type: boolean
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Extra labels to apply to the ServiceMonitor
                          object. Set these to the selector in your prometheus-operator
                          configuration (usually `{"release": "<helm_release_name>"}`).
                          Defaults to `{"release": "prometheus"}`.'
                        type: object
                    type: object
                type: object
              secrets:
                description: Secrets backend configurations
                properties:
                  k8sSecret:
                    description: Use a kubernetes secret for storing sensitive values.
                      If no other coniguration is provided then this is the fallback.
                    properties:
                      secretName:
                        description: The name of the secret backing the values. Default
                          is `<cluster-name>-app-secrets`.
                        type: string
                    type: object
                  vault:
                    description: Use vault for storing sensitive values. Requires
                      kubernetes service account authentication.
                    properties:
                      address:
                        description: The full URL to the vault server. Same as the
                          `VAULT_ADDR` variable.
                        type: string
                      authRole:
                        description: The auth role to assume when authenticating against
                          vault. Defaults to `kvdi`.
                        type: string
                      caCertBase64:
                        description: The base64 encoded CA certificate for verifying
                          the vault server certificate.
                        type: string
                      insecure:
                        description: Set to true to disable TLS verification.
                        type: boolean
                      secretsPath:
                        description: The base path to store secrets in vault. "Keys"
                          for other configurations in the context of the vault backend
                          can be put at `<secretsPath>/<secretKey>.data`. This will
                          change in the future to support keys inside the secret itself,
                          instead of assuming `data`.
                        type: string
                      tlsServerName:
                        description: Optionally set the SNI when connecting using
                          HTTPS.
                        type: string
                    type: object
                type: object
              userdataSelector:
                description: A configuration for selecting pre-existing PVCs to use
                  as the $HOME directory for sessions. This configuration takes precedence
                  over `userdataSpec`.
                properties:
                  matchLabel:
                    description: MatchLabel is a label **key** to use to select a
                      PVC for the user. The value will in the selector will be the
                      name of the user launching the session. Use this if your usernames
                      may not always be DNS compliant.
                    type: string
                  matchName:
                    description: MatchName is a pattern to match for the name of the
                      PVC. The string ${USERNAME} will be replaced in the pattern
                      with the actual username when searching for the volume. Note,
                      this will only work if usernames are DNS compliant.
                    type: string
                type: object
              userdataSpec:
                description: "The configuration for user $HOME volumes to be managed
                  by kVDI. \n **NOTE:** Even though the controller will try to force
                  the reclaim policy on created volumes to `Retain`, you may want
                  to set it explicitly on your storage-class controller as an extra
                  safeguard."
                properties:
                  accessModes:
                    description: 'AccessModes contains the desired access modes the
                      volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: 'This field can be used to specify either: * An existing
                      VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim) If the provisioner
                      or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified
                      data source. If the AnyVolumeDataSource feature gate is enabled,
                      this field will always have the same contents as the DataSourceRef
                      field.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  dataSourceRef:
                    description: 'Specifies the object from which to populate the
                      volume with data, if a non-empty volume is desired. This may
                      be any local object from a non-empty API group (non core object)
                      or a PersistentVolumeClaim object. When this field is specified,
                      volume binding will only succeed if the type of the specified
                      object matches some installed volume populator or dynamic provisioner.
                      This field will replace the functionality of the DataSource
                      field and as such if both fields are non-empty, they must have
                      the same value. For backwards compatibility, both fields (DataSource
                      and DataSourceRef) will be set to the same value automatically
                      if one of them is empty and the other is non-empty. There are
                      two important differences between DataSource and DataSourceRef:
                      * While DataSource only allows two specific types of objects,
                      DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim
                      objects. * While DataSource ignores disallowed values (dropping
                      them), DataSourceRef   preserves all values, and generates an
                      error if a disallowed value is   specified. (Alpha) Using this
                      field requires the AnyVolumeDataSource feature gate to be enabled.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: 'Resources represents the minimum resources the volume
                      should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  retainPVCs:
                    description: RetainPVCs tells the desktop controller to leave
                      PVCs in-tact after they are allocated for a user. The default
                      behavior is to free the volume from the PVC after each desktop
                      session so it can be used across other namespaces. Note that
                      if you set this value to `true` users will only be able to launch
                      sessions in a single namespace (unless the PVC is manually removed).
                    type: boolean
                  selector:
                    description: A label query over volumes to consider for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  storageClassName:
                    description: 'Name of the StorageClass required by the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                    type: string
                  volumeMode:
                    description: volumeMode defines what type of volume is required
                      by the claim. Value of Filesystem is implied when not included
                      in claim spec.
                    type: string
                  volumeName:
                    description: VolumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
            type: object
          status:
            description: VDIClusterStatus defines the observed state of VDICluster
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
